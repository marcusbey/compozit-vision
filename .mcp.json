{
  "description": "Compozit Vision - MCP Server Configuration",
  "version": "1.0.0",
  "mcpServers": {
    "stripe": {
      "name": "Stripe Payment Processing",
      "description": "Official Stripe MCP server for payment processing, subscriptions, and customer management",
      "provider": "stripe",
      "type": "payment",
      "priority": "high",
      "command": "npx",
      "args": ["-y", "@stripe/mcp", "--tools=all", "--api-key=${STRIPE_SECRET_KEY}"],
      "env": {
        "STRIPE_SECRET_KEY": "${STRIPE_SECRET_KEY}",
        "STRIPE_PUBLISHABLE_KEY": "${STRIPE_PUBLISHABLE_KEY}",
        "STRIPE_WEBHOOK_SECRET": "${STRIPE_WEBHOOK_SECRET}"
      },
      "transport": {
        "type": "stdio"
      },
      "capabilities": [
        "payment_intents",
        "subscriptions",
        "customers",
        "webhooks",
        "refunds",
        "invoices"
      ],
      "rateLimits": {
        "requestsPerSecond": 100,
        "burstLimit": 1000
      },
      "cost": {
        "type": "transaction_based",
        "fees": "2.9% + 30Â¢ per transaction"
      },
      "documentation": "https://docs.stripe.com/mcp"
    },

    "supabase": {
      "name": "Supabase Database Operations",
      "description": "Official Supabase MCP server for database operations, authentication, and file storage",
      "provider": "supabase",
      "type": "database",
      "priority": "high",
      "command": "node",
      "args": ["./node_modules/@supabase/mcp-server-supabase/dist/index.js"],
      "env": {
        "SUPABASE_ACCESS_TOKEN": "${SUPABASE_ACCESS_TOKEN}",
        "SUPABASE_PROJECT_REF": "${SUPABASE_PROJECT_REF}",
        "SUPABASE_URL": "${SUPABASE_URL}",
        "SUPABASE_ANON_KEY": "${SUPABASE_ANON_KEY}",
        "SUPABASE_SERVICE_ROLE_KEY": "${SUPABASE_SERVICE_ROLE_KEY}",
        "DATABASE_URL": "${DATABASE_URL}"
      },
      "transport": {
        "type": "stdio"
      },
      "capabilities": [
        "database_operations",
        "authentication",
        "real_time_subscriptions",
        "file_storage",
        "edge_functions"
      ],
      "rateLimits": {
        "requestsPerMinute": 1000,
        "concurrentConnections": 200
      },
      "cost": {
        "type": "usage_based",
        "tiers": "Free (500MB), Pro ($25/mo), Team ($599/mo)"
      }
    },

    "redis": {
      "name": "Redis Caching Layer",
      "description": "Redis MCP server for caching, session management, and real-time data",
      "provider": "redis",
      "type": "cache",
      "priority": "medium",
      "command": "uvx",
      "args": ["--from", "git+https://github.com/redis/mcp-redis.git", "redis-mcp-server", "--url", "${REDIS_URL}"],
      "env": {
        "REDIS_URL": "${REDIS_URL}",
        "REDIS_PASSWORD": "YOUR_REDIS_PASSWORD",
        "REDIS_TLS": "false"
      },
      "transport": {
        "type": "stdio"
      },
      "capabilities": [
        "key_value_operations",
        "pub_sub",
        "streams",
        "vector_similarity",
        "json_operations"
      ],
      "rateLimits": {
        "requestsPerSecond": 10000,
        "memoryLimit": "1GB"
      },
      "cost": {
        "type": "infrastructure",
        "estimate": "$50-200/month"
      }
    },

    "firebase": {
      "name": "Firebase Database & Authentication",
      "description": "Community Firebase MCP for Firestore, Authentication, and Storage operations",
      "provider": "gannonh",
      "type": "database",
      "priority": "medium",
      "command": "node",
      "args": ["/path/to/firebase-mcp/build/index.js"],
      "env": {
        "FIREBASE_SERVICE_ACCOUNT_KEY_PATH": "/path/to/service-account-key.json",
        "FIREBASE_PROJECT_ID": "compozit-vision",
        "FIREBASE_STORAGE_BUCKET": "compozit-vision.appspot.com",
        "FIREBASE_DATABASE_URL": "https://compozit-vision-default-rtdb.firebaseio.com"
      },
      "transport": {
        "type": "stdio"
      },
      "capabilities": [
        "firestore_operations",
        "authentication_management",
        "file_storage",
        "real_time_listeners",
        "user_management",
        "push_notifications"
      ],
      "rateLimits": {
        "readsPerSecond": 10000,
        "writesPerSecond": 1000,
        "storageOpsPerSecond": 1000
      },
      "cost": {
        "type": "usage_based",
        "pricing": "Pay-per-use (reads, writes, storage, bandwidth)"
      },
      "features": {
        "realtime": true,
        "offline_support": true,
        "auto_scaling": true,
        "multi_region": true
      }
    },

    "ikea-catalog": {
      "name": "IKEA Product Catalog",
      "description": "IKEA product data via Zyla API Hub for furniture specifications and pricing",
      "provider": "zyla_labs",
      "type": "product_catalog",
      "priority": "high",
      "endpoint": "https://ikea-api.p.rapidapi.com",
      "transport": {
        "type": "http"
      },
      "env": {
        "RAPIDAPI_KEY": "YOUR_RAPIDAPI_KEY_HERE",
        "RAPIDAPI_HOST": "ikea-api.p.rapidapi.com"
      },
      "capabilities": [
        "product_search",
        "product_details",
        "pricing_info",
        "stock_availability",
        "store_locations"
      ],
      "rateLimits": {
        "requestsPerMonth": 1000,
        "requestsPerDay": 100
      },
      "cost": {
        "type": "subscription",
        "tiers": "Free (1K/month), Basic ($29/month), Pro ($99/month)"
      },
      "dataStructure": {
        "product_id": "string",
        "name": "string",
        "price": "number",
        "dimensions": "object",
        "materials": "array",
        "images": "array",
        "availability": "object"
      }
    },

    "amazon-products": {
      "name": "Amazon Product Advertising API",
      "description": "Official Amazon Product Advertising API for product search and affiliate links",
      "provider": "amazon",
      "type": "product_catalog",
      "priority": "high",
      "endpoint": "https://webservices.amazon.com/paapi5",
      "transport": {
        "type": "http"
      },
      "env": {
        "AMAZON_ACCESS_KEY": "YOUR_ACCESS_KEY_HERE",
        "AMAZON_SECRET_KEY": "YOUR_SECRET_KEY_HERE",
        "AMAZON_ASSOCIATE_TAG": "YOUR_ASSOCIATE_TAG_HERE",
        "AMAZON_MARKETPLACE": "www.amazon.com"
      },
      "capabilities": [
        "item_search",
        "item_lookup",
        "browse_nodes",
        "cart_operations",
        "variation_lookup"
      ],
      "rateLimits": {
        "requestsPerDay": 8640,
        "requestsPerSecond": 1
      },
      "cost": {
        "type": "revenue_based",
        "commission": "1-10% affiliate commission"
      }
    },

    "price-comparison": {
      "name": "Multi-Platform Price Comparison",
      "description": "Apify-based price comparison across multiple e-commerce platforms",
      "provider": "apify",
      "type": "price_intelligence",
      "priority": "medium",
      "endpoint": "https://api.apify.com/v2",
      "transport": {
        "type": "http"
      },
      "env": {
        "APIFY_API_TOKEN": "${APIFY_API_TOKEN}"
      },
      "capabilities": [
        "price_monitoring",
        "historical_pricing",
        "competitor_analysis",
        "deal_detection",
        "inventory_tracking"
      ],
      "rateLimits": {
        "requestsPerMonth": 10000,
        "concurrentRuns": 10
      },
      "cost": {
        "type": "usage_based",
        "pricing": "$0.003-0.01 per page scraped"
      },
      "supportedPlatforms": [
        "amazon",
        "ebay",
        "walmart",
        "target",
        "wayfair",
        "home_depot"
      ]
    },

    "pinterest-inspiration": {
      "name": "Pinterest Design Inspiration",
      "description": "Pinterest scraper for design inspiration and trend analysis",
      "provider": "apify",
      "type": "social_scraping",
      "priority": "medium",
      "endpoint": "https://api.apify.com/v2/acts/apify~pinterest-scraper",
      "transport": {
        "type": "http"
      },
      "env": {
        "APIFY_API_TOKEN": "${APIFY_API_TOKEN}"
      },
      "capabilities": [
        "pin_extraction",
        "board_analysis",
        "trend_identification",
        "color_extraction",
        "hashtag_tracking"
      ],
      "rateLimits": {
        "pinsPerHour": 1000,
        "requestsPerDay": 1000
      },
      "cost": {
        "type": "usage_based",
        "pricing": "$0.002 per pin extracted"
      },
      "targetHashtags": [
        "#interiordesign",
        "#homedecor",
        "#furniture",
        "#livingroom",
        "#bedroom",
        "#kitchen"
      ]
    },

    "instagram-trends": {
      "name": "Instagram Design Trends",
      "description": "Instagram API scraper for design content and influencer tracking",
      "provider": "apify",
      "type": "social_scraping",
      "priority": "medium",
      "endpoint": "https://api.apify.com/v2/acts/apify~instagram-scraper",
      "transport": {
        "type": "http"
      },
      "env": {
        "APIFY_API_TOKEN": "${APIFY_API_TOKEN}"
      },
      "capabilities": [
        "post_extraction",
        "story_analysis",
        "hashtag_monitoring",
        "influencer_tracking",
        "engagement_metrics"
      ],
      "rateLimits": {
        "postsPerHour": 500,
        "profilesPerDay": 100
      },
      "cost": {
        "type": "usage_based",
        "pricing": "$0.003 per post extracted"
      },
      "targetAccounts": [
        "@designmilk",
        "@apartmenttherapy",
        "@housebeautiful",
        "@elledecor"
      ]
    },

    "real-estate-data": {
      "name": "Real Estate Property Data",
      "description": "Zillow and real estate data for room-specific product recommendations",
      "provider": "apify",
      "type": "real_estate",
      "priority": "low",
      "endpoint": "https://api.apify.com/v2/acts/maxcopell~zillow-scraper",
      "transport": {
        "type": "http"
      },
      "env": {
        "APIFY_API_TOKEN": "${APIFY_API_TOKEN}"
      },
      "capabilities": [
        "property_listings",
        "room_dimensions",
        "property_images",
        "market_analysis",
        "neighborhood_data"
      ],
      "rateLimits": {
        "propertiesPerDay": 1000,
        "requestsPerHour": 100
      },
      "cost": {
        "type": "usage_based",
        "pricing": "$0.005 per property"
      }
    },

    "image-recognition": {
      "name": "Image Recognition & Analysis",
      "description": "Computer vision for product identification and aesthetic analysis",
      "provider": "community",
      "type": "ai_vision",
      "priority": "medium",
      "command": "node",
      "args": ["/path/to/mcp-image-recognition/index.js"],
      "env": {
        "OPENAI_API_KEY": "YOUR_OPENAI_KEY_HERE",
        "ANTHROPIC_API_KEY": "YOUR_ANTHROPIC_KEY_HERE"
      },
      "transport": {
        "type": "stdio"
      },
      "capabilities": [
        "object_detection",
        "style_classification",
        "color_analysis",
        "similarity_matching",
        "quality_assessment"
      ],
      "rateLimits": {
        "imagesPerHour": 100,
        "maxImageSize": "10MB"
      },
      "cost": {
        "type": "api_usage",
        "estimate": "$0.01-0.05 per image"
      }
    },

    "3d-models": {
      "name": "3D Model Processing",
      "description": "Cloudinary for 3D model conversion and AR optimization",
      "provider": "cloudinary",
      "type": "media_processing",
      "priority": "medium",
      "endpoint": "https://api.cloudinary.com/v1_1",
      "transport": {
        "type": "http"
      },
      "env": {
        "CLOUDINARY_CLOUD_NAME": "YOUR_CLOUD_NAME",
        "CLOUDINARY_API_KEY": "YOUR_API_KEY",
        "CLOUDINARY_API_SECRET": "YOUR_API_SECRET"
      },
      "capabilities": [
        "format_conversion",
        "model_optimization",
        "ar_preparation",
        "texture_processing",
        "quality_compression"
      ],
      "supportedFormats": [
        "GLB",
        "GLTF",
        "USDZ",
        "FBX",
        "OBJ"
      ],
      "rateLimits": {
        "transformationsPerMonth": 25000,
        "storageLimit": "25GB"
      },
      "cost": {
        "type": "subscription",
        "pricing": "$89/month for 3D add-on"
      }
    },

    "google-shopping": {
      "name": "Google Shopping Data",
      "description": "Google Shopping product search and price comparison",
      "provider": "apify",
      "type": "product_search",
      "priority": "medium",
      "endpoint": "https://api.apify.com/v2/acts/apify~google-shopping-scraper",
      "transport": {
        "type": "http"
      },
      "env": {
        "APIFY_API_TOKEN": "${APIFY_API_TOKEN}"
      },
      "capabilities": [
        "product_search",
        "price_comparison",
        "merchant_info",
        "review_aggregation",
        "availability_check"
      ],
      "rateLimits": {
        "searchesPerDay": 1000,
        "resultsPerSearch": 100
      },
      "cost": {
        "type": "usage_based",
        "pricing": "$0.002 per search result"
      }
    }
  },

  "development": {
    "description": "Development environment MCP configuration",
    "mcpServers": {
      "stripe": {
        "env": {
          "STRIPE_SECRET_KEY": "sk_test_YOUR_TEST_KEY",
          "STRIPE_PUBLISHABLE_KEY": "pk_test_YOUR_TEST_KEY"
        }
      },
      "supabase": {
        "args": ["-y", "@supabase/mcp-server-supabase@latest", "--read-only", "--project-ref=${SUPABASE_PROJECT_REF}"]
      }
    }
  },

  "production": {
    "description": "Production environment MCP configuration",
    "mcpServers": {
      "stripe": {
        "env": {
          "STRIPE_SECRET_KEY": "sk_live_YOUR_LIVE_KEY",
          "STRIPE_PUBLISHABLE_KEY": "pk_live_YOUR_LIVE_KEY"
        },
        "transport": {
          "type": "http",
          "endpoint": "https://mcp.stripe.com"
        }
      },
      "supabase": {
        "rateLimits": {
          "requestsPerMinute": 5000,
          "concurrentConnections": 1000
        }
      }
    }
  },

  "monitoring": {
    "description": "MCP server monitoring and observability",
    "healthChecks": {
      "interval": "30s",
      "timeout": "10s",
      "retries": 3
    },
    "metrics": {
      "enabled": true,
      "endpoint": "/metrics",
      "provider": "prometheus"
    },
    "logging": {
      "level": "info",
      "format": "json",
      "destination": "stdout"
    },
    "alerts": {
      "errorRate": ">5%",
      "responseTime": ">1000ms",
      "availability": "<99%"
    }
  },

  "security": {
    "description": "Security configuration for MCP servers",
    "authentication": {
      "required": true,
      "methods": ["oauth2", "api_key", "jwt"]
    },
    "encryption": {
      "tls": "required",
      "version": "1.3"
    },
    "rateLimiting": {
      "enabled": true,
      "strategy": "sliding_window"
    },
    "secrets": {
      "management": "env_vars",
      "rotation": "90d"
    }
  },

  "cost_optimization": {
    "description": "Cost management for MCP server usage",
    "budgets": {
      "monthly_limit": 10000,
      "currency": "USD",
      "alerts": [
        {"threshold": 50, "action": "email"},
        {"threshold": 80, "action": "slack"},
        {"threshold": 95, "action": "throttle"}
      ]
    },
    "caching": {
      "enabled": true,
      "ttl": {
        "product_data": "1h",
        "price_data": "15m",
        "static_content": "24h"
      }
    },
    "request_optimization": {
      "batching": true,
      "deduplication": true,
      "compression": true
    }
  },

  "backup_servers": {
    "description": "Fallback MCP servers for high availability",
    "stripe_backup": {
      "name": "Stripe Backup Server",
      "type": "payment",
      "priority": "fallback",
      "endpoint": "https://backup-mcp.stripe.com"
    },
    "generic_scraper": {
      "name": "Generic Web Scraper",
      "type": "web_scraping",
      "priority": "fallback",
      "command": "docker",
      "args": ["run", "--rm", "-i", "puppeteer/puppeteer"]
    }
  }
}
